# -*- coding: utf-8 -*-
"""CustomTrainTensorflow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a3qH0Qo_cOBeGc_RkoRtLikv6g5jzj3X
"""

import tensorflow as tf

import numpy as np

tf.version

x_train = np.array([-1.0,0.0,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0], dtype=float)

y_train = np.array([-3.0,-1.0,1.0,3.0,5.0,7.0,9.0,11.0,13.0,15.0,17.0], dtype=float)

import random

w = tf.Variable(random.random(), trainable = True)

b = tf.Variable(random.random(), trainable = True)

def simple_loss(real_y,pred_y):
  return tf.abs(real_y-pred_y)

LEARNING_RATE = 0.001

def fit_data(real_x,real_y):
  with tf.GradientTape(persistent=True) as tape:
    pred_y = real_x*w + b
    reg_loss = simple_loss(real_y,pred_y)
  w_gradient = tape.gradient(reg_loss,w)
  b_gradient = tape.gradient(reg_loss,b)
  w.assign_sub(w_gradient * LEARNING_RATE)
  b.assign_sub(b_gradient * LEARNING_RATE)

for _ in range(500):
  fit_data(x_train,y_train)

print(f'y â‰ˆ {w.numpy()}x + {b.numpy()}')



